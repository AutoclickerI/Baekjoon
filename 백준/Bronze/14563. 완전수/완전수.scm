(define (perfect n a)
  (cond ((= n a) 0)
        (else (+ (if (= (remainder n a) 0) a 0) (perfect n (+ 1 a))))))
(define (loop n)
  (cond ((= n 0) 0)
        (else (let* ((R (read)) (var (perfect R 1))) (print (cond ((= R var) "Perfect")
                                                      ((< R var) "Abundant")
                                                      (else "Deficient")))) (loop (- n 1)))))
(loop (read))
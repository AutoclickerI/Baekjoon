(define (loop N)
  (cond ((= N 0) 0)
        (else (func (fetch (read))) (loop (- N 1)))))
(define (min a b) (if (< a b) a b))
(define (max a b) (if (> a b) a b))
(define (get-min l n)
  (if (null? l) n (min n (get-min (cdr l) (car l)))))
(define (get-max l n)
  (if (null? l) n (max n (get-max (cdr l) (car l)))))
(define (func l)
  (cond ((= 1 0) 1)
        (else (display (* 2 (- (get-max l (car l)) (get-min l (car l))))) (display " "))))
(define (fetch n)
  (if (= n 0) '() (cons (read) (fetch (- n 1)))))
(loop (read))